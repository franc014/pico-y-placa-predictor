{"id":"src/validator.js","dependencies":[{"name":"/Users/macintosh/Documents/PROJECTS/CHALLENGES/INTERVIEWS/stackbuilders/pico-y-placa-predictor/package.json","includedInParent":true,"mtime":1593143909747},{"name":"date-fns","loc":{"line":1,"column":34},"parent":"/Users/macintosh/Documents/PROJECTS/CHALLENGES/INTERVIEWS/stackbuilders/pico-y-placa-predictor/src/validator.js","resolved":"/Users/macintosh/Documents/PROJECTS/CHALLENGES/INTERVIEWS/stackbuilders/pico-y-placa-predictor/node_modules/date-fns/esm/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _dateFns = require(\"date-fns\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Validator = /*#__PURE__*/function () {\n  function Validator() {\n    _classCallCheck(this, Validator);\n  }\n\n  _createClass(Validator, [{\n    key: \"validatePlate\",\n    value: function validatePlate(plate) {\n      var regExp = /[A-Z][0-9]{1,3}-[0-9]{3,4}/g;\n      return regExp.test(plate);\n    }\n  }, {\n    key: \"validateDate\",\n    value: function validateDate(date) {\n      var _date$split = date.split(\"/\"),\n          _date$split2 = _slicedToArray(_date$split, 3),\n          year = _date$split2[0],\n          month = _date$split2[1],\n          day = _date$split2[2];\n\n      var regExp = /\\d{4}\\/(0[1-9]|1[012])\\/(0[1-9]|[12][0-9]|3[01])/g;\n      return regExp.test(date) && (0, _dateFns.isValid)((0, _dateFns.parseISO)(\"\".concat(year, \"-\").concat(month, \"-\").concat(day)));\n    }\n  }, {\n    key: \"validateTime\",\n    value: function validateTime(time) {\n      var regExp = /([0-1][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])/gm;\n      return regExp.test(time);\n    }\n  }]);\n\n  return Validator;\n}();\n\nvar _default = Validator;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/validator.js","original":{"line":1,"column":0}},{"name":"Validator","generated":{"line":28,"column":4},"source":"src/validator.js","original":{"line":3,"column":6}},{"name":"plate","generated":{"line":35,"column":34},"source":"src/validator.js","original":{"line":4,"column":16}},{"generated":{"line":35,"column":41},"source":"src/validator.js","original":{"line":4,"column":23}},{"generated":{"line":36,"column":0},"source":"src/validator.js","original":{"line":5,"column":4}},{"name":"regExp","generated":{"line":36,"column":10},"source":"src/validator.js","original":{"line":5,"column":10}},{"generated":{"line":36,"column":16},"source":"src/validator.js","original":{"line":5,"column":16}},{"generated":{"line":36,"column":19},"source":"src/validator.js","original":{"line":5,"column":19}},{"generated":{"line":36,"column":48},"source":"src/validator.js","original":{"line":5,"column":4}},{"generated":{"line":37,"column":0},"source":"src/validator.js","original":{"line":6,"column":4}},{"name":"regExp","generated":{"line":37,"column":13},"source":"src/validator.js","original":{"line":6,"column":11}},{"generated":{"line":37,"column":19},"source":"src/validator.js","original":{"line":6,"column":17}},{"name":"test","generated":{"line":37,"column":20},"source":"src/validator.js","original":{"line":6,"column":18}},{"generated":{"line":37,"column":24},"source":"src/validator.js","original":{"line":6,"column":11}},{"name":"plate","generated":{"line":37,"column":25},"source":"src/validator.js","original":{"line":6,"column":23}},{"generated":{"line":37,"column":30},"source":"src/validator.js","original":{"line":6,"column":11}},{"generated":{"line":37,"column":31},"source":"src/validator.js","original":{"line":6,"column":4}},{"generated":{"line":38,"column":0},"source":"src/validator.js","original":{"line":7,"column":3}},{"name":"date","generated":{"line":41,"column":33},"source":"src/validator.js","original":{"line":8,"column":15}},{"generated":{"line":41,"column":39},"source":"src/validator.js","original":{"line":8,"column":21}},{"generated":{"line":42,"column":0},"source":"src/validator.js","original":{"line":8,"column":21}},{"name":"date","generated":{"line":42,"column":24},"source":"src/validator.js","original":{"line":9,"column":31}},{"generated":{"line":42,"column":28},"source":"src/validator.js","original":{"line":9,"column":35}},{"name":"split","generated":{"line":42,"column":29},"source":"src/validator.js","original":{"line":9,"column":36}},{"generated":{"line":42,"column":34},"source":"src/validator.js","original":{"line":9,"column":31}},{"generated":{"line":42,"column":35},"source":"src/validator.js","original":{"line":9,"column":42}},{"generated":{"line":42,"column":38},"source":"src/validator.js","original":{"line":9,"column":31}},{"generated":{"line":42,"column":39},"source":"src/validator.js","original":{"line":8,"column":21}},{"generated":{"line":43,"column":0},"source":"src/validator.js","original":{"line":8,"column":21}},{"generated":{"line":44,"column":0},"source":"src/validator.js","original":{"line":8,"column":21}},{"name":"year","generated":{"line":44,"column":10},"source":"src/validator.js","original":{"line":9,"column":11}},{"generated":{"line":44,"column":14},"source":"src/validator.js","original":{"line":8,"column":21}},{"generated":{"line":45,"column":0},"source":"src/validator.js","original":{"line":8,"column":21}},{"name":"month","generated":{"line":45,"column":10},"source":"src/validator.js","original":{"line":9,"column":17}},{"generated":{"line":45,"column":15},"source":"src/validator.js","original":{"line":8,"column":21}},{"generated":{"line":46,"column":0},"source":"src/validator.js","original":{"line":8,"column":21}},{"name":"day","generated":{"line":46,"column":10},"source":"src/validator.js","original":{"line":9,"column":24}},{"generated":{"line":46,"column":13},"source":"src/validator.js","original":{"line":8,"column":21}},{"generated":{"line":48,"column":0},"source":"src/validator.js","original":{"line":10,"column":4}},{"name":"regExp","generated":{"line":48,"column":10},"source":"src/validator.js","original":{"line":10,"column":10}},{"generated":{"line":48,"column":16},"source":"src/validator.js","original":{"line":10,"column":16}},{"generated":{"line":48,"column":19},"source":"src/validator.js","original":{"line":10,"column":19}},{"generated":{"line":48,"column":70},"source":"src/validator.js","original":{"line":10,"column":4}},{"generated":{"line":49,"column":0},"source":"src/validator.js","original":{"line":11,"column":4}},{"name":"regExp","generated":{"line":49,"column":13},"source":"src/validator.js","original":{"line":11,"column":11}},{"generated":{"line":49,"column":19},"source":"src/validator.js","original":{"line":11,"column":17}},{"name":"test","generated":{"line":49,"column":20},"source":"src/validator.js","original":{"line":11,"column":18}},{"generated":{"line":49,"column":24},"source":"src/validator.js","original":{"line":11,"column":11}},{"name":"date","generated":{"line":49,"column":25},"source":"src/validator.js","original":{"line":11,"column":23}},{"generated":{"line":49,"column":29},"source":"src/validator.js","original":{"line":11,"column":11}},{"generated":{"line":49,"column":34},"source":"src/validator.js","original":{"line":11,"column":32}},{"generated":{"line":49,"column":56},"source":"src/validator.js","original":{"line":11,"column":40}},{"name":"year","generated":{"line":49,"column":89},"source":"src/validator.js","original":{"line":11,"column":52}},{"generated":{"line":49,"column":93},"source":"src/validator.js","original":{"line":11,"column":40}},{"name":"month","generated":{"line":49,"column":107},"source":"src/validator.js","original":{"line":11,"column":60}},{"generated":{"line":49,"column":112},"source":"src/validator.js","original":{"line":11,"column":40}},{"name":"day","generated":{"line":49,"column":126},"source":"src/validator.js","original":{"line":11,"column":69}},{"generated":{"line":49,"column":129},"source":"src/validator.js","original":{"line":11,"column":40}},{"generated":{"line":49,"column":131},"source":"src/validator.js","original":{"line":11,"column":32}},{"generated":{"line":49,"column":132},"source":"src/validator.js","original":{"line":11,"column":4}},{"generated":{"line":50,"column":0},"source":"src/validator.js","original":{"line":12,"column":3}},{"name":"time","generated":{"line":53,"column":33},"source":"src/validator.js","original":{"line":13,"column":15}},{"generated":{"line":53,"column":39},"source":"src/validator.js","original":{"line":13,"column":21}},{"generated":{"line":54,"column":0},"source":"src/validator.js","original":{"line":14,"column":4}},{"name":"regExp","generated":{"line":54,"column":10},"source":"src/validator.js","original":{"line":14,"column":10}},{"generated":{"line":54,"column":16},"source":"src/validator.js","original":{"line":14,"column":16}},{"generated":{"line":54,"column":19},"source":"src/validator.js","original":{"line":14,"column":19}},{"generated":{"line":54,"column":68},"source":"src/validator.js","original":{"line":14,"column":4}},{"generated":{"line":55,"column":0},"source":"src/validator.js","original":{"line":15,"column":4}},{"name":"regExp","generated":{"line":55,"column":13},"source":"src/validator.js","original":{"line":15,"column":11}},{"generated":{"line":55,"column":19},"source":"src/validator.js","original":{"line":15,"column":17}},{"name":"test","generated":{"line":55,"column":20},"source":"src/validator.js","original":{"line":15,"column":18}},{"generated":{"line":55,"column":24},"source":"src/validator.js","original":{"line":15,"column":11}},{"name":"time","generated":{"line":55,"column":25},"source":"src/validator.js","original":{"line":15,"column":23}},{"generated":{"line":55,"column":29},"source":"src/validator.js","original":{"line":15,"column":11}},{"generated":{"line":55,"column":30},"source":"src/validator.js","original":{"line":15,"column":4}},{"generated":{"line":56,"column":0},"source":"src/validator.js","original":{"line":16,"column":3}},{"name":"Validator","generated":{"line":62,"column":15},"source":"src/validator.js","original":{"line":19,"column":15}}],"sources":{"src/validator.js":"import { isValid, parseISO } from \"date-fns\";\n\nclass Validator {\n  validatePlate(plate) {\n    const regExp = /[A-Z][0-9]{1,3}-[0-9]{3,4}/g;\n    return regExp.test(plate);\n  }\n  validateDate(date) {\n    const [year, month, day] = date.split(\"/\");\n    const regExp = /\\d{4}\\/(0[1-9]|1[012])\\/(0[1-9]|[12][0-9]|3[01])/g;\n    return regExp.test(date) && isValid(parseISO(`${year}-${month}-${day}`));\n  }\n  validateTime(time) {\n    const regExp = /([0-1][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])/gm;\n    return regExp.test(time);\n  }\n}\n\nexport default Validator;\n"},"lineCount":null}},"error":null,"hash":"fed9f4c8b9464b3136db3ca7457deeda","cacheData":{"env":{}}}